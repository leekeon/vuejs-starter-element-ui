name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/vuejs-starter-element-ui

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    
    - name: Get verion
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "::set-output name=version::$VERSION"
        
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Packages Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Docker Build & Push to GitHub Packages
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.image.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
          
  #Public Cloud 환경생성 되면 아래 수정하여 사용 예정
  #deploy:
  #  runs-on: ubuntu-latest
  #  needs: build

  #  steps:
  #    - name: Git config
  #      run: |
  #        git config --global user.email "actions@github.com"
  #        git config --global user.name "GitHub Actions"

  #   - name: Check out k8s repo
  #     uses: actions/checkout@master
  #     with:
  #       repository: your/gitops-repository
  #       token: ${{ secrets.GIT_ACCESS_TOKEN }}

  #   - name: chmod repo destination
  #     run: |
  #       chmod +x $DESTINATION
  #       ls

  #   - name: git push image tag to k8 repo 
  #     env:
  #       GITHUB_REPO: ${{ github.repository.name }}
  #       GITHUB_SHA: ${{ github.sha }}
  #     run: |
  #       sed -i -e 's@${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:.*@${{ steps.build-image.outputs.image }}@g' $DESTINATION/resources.yaml
  #       git add .
  #       git commit -m "$COMMIT_MSG"
  #       git push -f --set-upstream origin main     
